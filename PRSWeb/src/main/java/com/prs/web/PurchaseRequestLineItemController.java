package com.prs.web;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.prs.business.purchaserequestlineitem.PurchaseRequestLineItem;
import com.prs.business.purchaserequestlineitem.PurchaseRequestLineItemRepository;
import com.prs.util.PRSMaintenanceReturn;


@Controller   
@RequestMapping(path="/PurchaseRequestLineItems") 
public class PurchaseRequestLineItemController extends BaseController {
	@Autowired // This means to get the bean called PurchaserequestRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private PurchaseRequestLineItemRepository purchaseRequestLineItemRepository;
	
	@GetMapping(path="/List") //instead of all, we use list 
	public @ResponseBody Iterable<PurchaseRequestLineItem> getAllPurchaseRequestLineItem() {
		// This returns a JSON or XML with the users
		return purchaseRequestLineItemRepository.findAll();
	}
	
	@GetMapping(path="/Get")
	public @ResponseBody List<PurchaseRequestLineItem> getPurchaseRequestLineItem (@RequestParam int id) {
		
		Optional<PurchaseRequestLineItem> prli =purchaseRequestLineItemRepository.findById(id);
		return getReturnArray(prli.get());
//		if (prli.isPresent())
//			return prli.get();
//		else
//			return null;
	}

	@PostMapping(path = "/Add") // Map ONLY GET Requests
	public @ResponseBody PRSMaintenanceReturn addNewPurchaseRequestLineItem(
			@RequestBody PurchaseRequestLineItem purchaseRequestLineItem) {
		try {
			purchaseRequestLineItemRepository.save(purchaseRequestLineItem);
		} catch (Exception e) {
			purchaseRequestLineItem = null;
		}
		return PRSMaintenanceReturn.getMaintReturn(purchaseRequestLineItem);
	}
	
	@PostMapping(path="/Change")
	public @ResponseBody PRSMaintenanceReturn updatePurchaseRequestLineItem (@RequestBody PurchaseRequestLineItem purchaseRequestLineItem) {
		
		try {
			purchaseRequestLineItemRepository.save(purchaseRequestLineItem);
			System.out.println("PurchaseRequestLineItem updated:  "+ purchaseRequestLineItem);
		}
		catch (Exception e) {
			purchaseRequestLineItem = null;
		}
		
		return PRSMaintenanceReturn.getMaintReturn(purchaseRequestLineItem);
	}

	@GetMapping(path="/Remove")
	public @ResponseBody PRSMaintenanceReturn deletePurchaseRequestLineItem (@RequestParam int id) {
		
		Optional<PurchaseRequestLineItem> purchaseRequestLineItem= purchaseRequestLineItemRepository.findById(id);
		try {
			PurchaseRequestLineItem prli = purchaseRequestLineItem.get();
			purchaseRequestLineItemRepository.delete(prli);
			System.out.println("Product deleted:  "+prli);
		}
		catch (Exception e) {
			purchaseRequestLineItem = null;
		}
		return PRSMaintenanceReturn.getMaintReturn(purchaseRequestLineItem);
	}	
}