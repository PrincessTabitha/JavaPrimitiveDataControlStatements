package com.prs.web;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.prs.business.purchaserequest.Purchaserequest;
import com.prs.business.purchaserequest.PurchaserequestRepository;
import com.prs.util.PRSMaintenanceReturn;



@Controller   
@RequestMapping(path="/Purchaserequest") 
public class PurchaserequestController {
	@Autowired // This means to get the bean called PurchaserequestRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private PurchaserequestRepository purchaserequestRepository;
	
	@GetMapping(path="/List") //instead of all, we use list 
	public @ResponseBody Iterable<Purchaserequest> getAllPurchaserequest() {
		// This returns a JSON or XML with the users
		return purchaserequestRepository.findAll();
	}
	
	@GetMapping(path="/Get")
	public @ResponseBody Purchaserequest getPurchaserequest (@RequestParam int id) {
		
		Optional<Purchaserequest> pr =purchaserequestRepository.findById(id);
		if (pr.isPresent())
			return pr.get();
		else
			return null;
	}
	
	@PostMapping(path="/Add") // Map ONLY GET Requests
	public @ResponseBody PRSMaintenanceReturn addNewPurchaserequest (@RequestBody Purchaserequest purchaserequest) {
			try {
				purchaserequestRepository.save(purchaserequest);
	}
	catch (Exception e) {
		purchaserequest = null;
	}
return PRSMaintenanceReturn.getMaintReturn(purchaserequest);
}
	@PostMapping(path="/Change")
	public @ResponseBody PRSMaintenanceReturn updatePurchaserequest (@RequestBody Purchaserequest purchaserequest) {
		
		try {
			purchaserequestRepository.save(purchaserequest);
			System.out.println("Purchaserequest updated:  "+ purchaserequest);
		}
		catch (Exception e) {
			purchaserequest = null;
		}
		
		return PRSMaintenanceReturn.getMaintReturn(purchaserequest);
	}

	@GetMapping(path="/Remove")
	public @ResponseBody PRSMaintenanceReturn deleteProduct (@RequestParam int id) {
		
		Optional<Purchaserequest> purchaserequest= purchaserequestRepository.findById(id);
		try {
			Purchaserequest pr = purchaserequest.get();
			purchaserequestRepository.delete(pr);
			System.out.println("Product deleted:  "+pr);
		}
		catch (Exception e) {
			purchaserequest = null;
		}
		return PRSMaintenanceReturn.getMaintReturn(purchaserequest);
	}	
}